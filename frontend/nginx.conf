# -- Necessary, NGINX wouldn't work without
events {
  worker_connections 1024;
}
worker_processes auto;

# http {
#   server {
#     listen 80;
#     server_name domain.com;
#     return 301 https://$server_name$request_uri;
#   }
#
#   server {
#     listen 443 ssl;
#     server_name domain.com;
#     ssl_certificate /etc/nginx/ssl/fullchain.pem;
#     ssl_certificate_key /etc/nginx/ssl/privkey.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#
#     location / {
#       root /usr/share/nginx/html;
#       try_files $uri $uri/ /index.html;
#     }
#
#     location /api {
#       proxy_pass http://backend:8080;
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remove_addr;
#     }
#   }
# }

http {
  # removes NGINX Version from footer of errors
  server_tokens off;
  charset utf-8;
  # include /etc/nginx/mime.types;
  # default_type application/octet-stream;

  # types {
  #   application/javascript mjs;
  #   # application/wasm wasm;
  # }

  server {
    # default_server is just a flag, no value
    listen 80 default_server;

    server_name quiztestapp.io;
    # server_name kevsquizapp.com;

    return 301 https://$server_name$request_uri;

    # -- Renewal Challenge
    location ~ /.well-knows/acme-challenge/ {
      # -- Same as in certbot container
      root /var/www/cerbot;
    }
  }
  server {
    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/kevsquizapp.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/kevsquizapp.com/privkey.pem;
    # ssl_certificate /etc/letsencrypt/live/kevsquizapp.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/kevsquizapp.com/privkey.pem;
    server_name quiztestapp.io;
    # server_name kevsquizapp.com;
    ssl_protocols TLSv1.2 TLSv1.3;

    types {
      application/javascript js;
      application/wasm wasm;
      text/html html htm shtml;
    }

    location / {
      root /usr/share/nginx/html;
      # index index.html;
      try_files $uri $uri/ index.html =404;
    }

    # This part is crucial for Single Page Applications (SPAs)
    # location ~* \.(?:js|css|wasm)$ {
    location ~* \.(js|css|wasm)$ {
      # expires 1y;
      # access_log off;
      # add_header Cache-Control "public";
      # -- Disable Cashing for Testing
      add_header Cache-Control "no-store, no-cache, must-revalidate";
      root /usr/share/nginx/html;
      try_files $uri $uri/ =404;
    }

    location /api/ {
      proxy_pass http://actixbackend:8002/api/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Renewal Challenge
    location ~ /.well-knows/acme-challenge/ {
      # Same as in certbot container
      root /var/www/cerbot;
    }
    # Additional security headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";
  }
}
